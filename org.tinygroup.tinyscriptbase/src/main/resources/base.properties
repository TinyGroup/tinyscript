#default tinyscript exception settings
error.type.recognizer=Recognizer Exception:
error.type.parser=Parser Exception:
error.type.running=Running Exception:
error.type.function=Function Exception:
error.type.field=Field Exception:
error.type.expression=Expression Exception:
error.type.directive=Directive Exception:
error.type.scriptclass=ScriptClass Exception:
error.type.other=Other Exception:
error.type.unknown=Unknown Exception:

error.no.detail=No Exception Detail.
error.place=Exception Place:
error.text=Exception Text:
error.class=Exception Class:
error.two.info=[%d,%d]
error.four.info=[%d,%d]-[%d,%d]

#unsupport
unsupport.info1 =Execution [%] method is not supported
unmatch.info1=No matching processor[%s] was found to handle it

#default script engine
engine.notfind.class1 =[%s]Class was not found when script function was added
engine.notfind.class2 =[%s]Class was not found when script function was removed
engine.parser.error =Parsing script section failed according to query content[%s],Exception:%s
engine.start.finish=Script Engine start successful!
engine.stop.finish=Script Engine stop successful!
engine.run.error=An exception occurred executing the script file:[%s]
engine.unsupport.interpret=This ScriptEngine implementation does not support access to ScriptInterpret operations!

#FileProcessor
fileprocessor.load.start=The tiny script file [%s] starts loading
fileprocessor.loading=Load the tiny script class [%s]
fileprocessor.load.end=The tiny script file [%s] is loaded
fileprocessor.delete.start=The tiny script file [%s] starts deleting
fileprocessor.deleting=Delete the tiny script class [%s]
fileprocessor.delete.end=Tiny script file [%s] is deleted
fileprocessor.load.error=There was an error loading the tiny script file [%s]
close.file.error=Close stream error. File path: [%s]

#util
type.convert.error=No matching type converter was found based on type '[%s]'
number.convert.error=The value object of type [%s] is not converted to [%s] type
op.notfound.error=The processor corresponding to the [%s] operation cannot be found
calculator.notfound.error=The calculator corresponding to the [%s] cannot be found
range.empty.error=Failed to create range: element null!
op.unsupport.error1=Type [%s] does not support the operation of [%s]
op.unsupport.error2=Type 1[%s], type 2[%s] does not support the operation of [%s]
attribute.run.error=The object [%s] find [%s] property value has an exception:
attribute.notfound.error=The object [%s] cannot find the property value of [%s]
newinstance.notfound.error=The instance executor of the class name [%s] was not found
call.notfound.error=The appropriate FunctionCallProcessor was not found for processing, object type [%s], method name [%s]
call.null.error=The appropriate FunctionCallProcessor was not found for processing, the object is null, and the method name is [%s]
script.reader.error1=The script fragment failed to get the script based on [%d,%d]-[%d,%d]
script.reader.error2=The script fragment failed to get the script based on [%d,%d]
script.parser.error1=The tiny scripting engine for type [%s] is not a subclass of AbstractScriptEngine and does not support the acquisition of the script interpreter!
script.parser.error2=The script fragment of scriptId:[%s], script:[%s], renders an exception:
script.parser.error3=Class attribute variables for parsing class [%s] fail:
script.parser.error4=The object of type [%s] does not find the function [%s]
script.parser.error5=Execute script function exception: argument list is inconsistent with definition
context.notfound.bean=The [%s] was not found from the context and global configuration item, and the user name was failed to obtain the bean
interpret.unknown.error=Unknown ParseTree node type [%s]
proxy.run.error=An exception occurred executing the [%s] proxy class:
java.run.error1=The class [%s] execution method [%s] has an exception:
java.run.error2=Class [%s] does not exist method [%s]
java.run.error3=Class [%s] does not have a method that is consistent with the parameter list [%s]
java.run.error4=Class [%s] executes the static method [%s], where an exception occurs:

#function
function.parameter.empty=[%s] function parameter is empty!
function.parameter.error=The parameter format of [%s] function is not correct!
function.parameter.unsupport=[%s] function does not support a certain type[%s] of parameter!
function.run.error=[%s] function execution exception:
function.unrecognized.class=Unrecognized class type[%s]
function.scirpt.error=[%s] function running script[%s] exception
function.randarray.error=The get's number[%d] that exceeds the total number[%d] of elements
function.randarray.unsupport=Modifying arrays is not supported
function.tobean.noclass=No information about class [%s] was found
function.tobean.instance=The instance class [%s] has an exception. Please check whether the class lacks a non parametric constructor
function.tobean.setvalue=Class [%s] object, field [%s], set value [%s], an exception occurs:

#context
context.common.error=[%s] type ParserRuleContext processing exception:
context.directive.error=An exception occurred executing %s directive
context.array.error1=Failed to create a multidimensional array of type [%s]: no class object was found
context.array.error2=Failed to create a multidimensional array of type [%s]: the length of the [%s] dimensional array must not be less than 0
context.array.error3=Failed to create a multidimensional array of type [%s]: the array structure has an undefined dimension of length, and no initialization data is defined
context.array.error4=Failed to create a multidimensional array of type [%s]: construction length [%s], initialization length [%s], neither of them matches
context.array.error5=Creating an object [%s] array is an exception
context.arrayitem.error=An exception occurred at the node of type [%s]:The object [%s], under the name of [%s]
context.creator.error1=New instruction matching failed to process data structures!
context.creator.error2=An exception occurred creating the object [%s]
context.custom.error=An exception occurred executing %s user-defined rule:
context.field.error=The object [%s] access property [%s] has an exception:
context.call.error1=Function [%s] is not supported
context.call.error2=An exception occurred with the execution function [%s]
context.lambda.error1=[%s] type ParserRuleContext processing exception: lambda expression [%s]
context.lambda.error2=An exception occurred in the lambda function: the list of arguments is inconsistent with the definition
context.math.error1=%s=%s,%s=%s performs an arithmetic exception
context.math.error2=%s performs %s operation with an exception
context.math.error3=%s=%s,%s=%s,%s comparison, operation exception
context.math.error4=The three - expression [%s] operation has an exception
context.math.error5=%s performs a logical %s operation with an exception

#TerminalNode
terminal.common.error=[%s] type TerminalNode processing exception: